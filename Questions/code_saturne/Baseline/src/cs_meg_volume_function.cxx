/*----------------------------------------------------------------------------*/
/*
  This file is generated by code_saturne, a general-purpose CFD tool.
*/
/*----------------------------------------------------------------------------*/

#include "cs_defs.h"

/*----------------------------------------------------------------------------
 * Standard C library headers
 *----------------------------------------------------------------------------*/

#include <assert.h>
#include <math.h>

#if defined(HAVE_MPI)
#include <mpi.h>
#endif

/*----------------------------------------------------------------------------
 *  Local headers
 *----------------------------------------------------------------------------*/

#include "cs_headers.h"

/*----------------------------------------------------------------------------*/

BEGIN_C_DECLS

/*----------------------------------------------------------------------------*/

void
cs_meg_volume_function(const char      *zone_name,
                       [[maybe_unused]] const cs_lnum_t  n_elts,
                       [[maybe_unused]] const cs_lnum_t *elt_ids,
                       [[maybe_unused]] const cs_real_t  xyz[][3],
                       const char      *fields_names,
                       cs_real_t       *fvals[])
{
  /* User defined formula for variable(s) density over zone all_cells
    ----------------------------------------------------------------- */

  if (strcmp(fields_names, "density") == 0 &&
      strcmp(zone_name, "all_cells") == 0) {
    const cs_real_t rho0 = cs_glob_fluid_properties->ro0;

    for (cs_lnum_t e_id = 0; e_id < n_elts; e_id++) {
      cs_lnum_t c_id = (elt_ids != nullptr) ? elt_ids[e_id] : e_id;
      fvals[0][c_id] = rho0;
    }
  }

  /* User defined formula for variable(s) density over zone Pan
    ----------------------------------------------------------- */

  if (strcmp(fields_names, "density") == 0 &&
      strcmp(zone_name, "Pan") == 0) {
    for (cs_lnum_t e_id = 0; e_id < n_elts; e_id++) {
      cs_lnum_t c_id = (elt_ids != nullptr) ? elt_ids[e_id] : e_id;
      fvals[0][c_id] = 997;
    }
  }

  /* User defined formula for variable(s) molecular_viscosity over zone all_cells
    ----------------------------------------------------------------------------- */

  if (strcmp(fields_names, "molecular_viscosity") == 0 &&
      strcmp(zone_name, "all_cells") == 0) {
    const cs_real_t mu0 = cs_glob_fluid_properties->viscl0;

    for (cs_lnum_t e_id = 0; e_id < n_elts; e_id++) {
      cs_lnum_t c_id = (elt_ids != nullptr) ? elt_ids[e_id] : e_id;
      fvals[0][c_id] = mu0;
    }
  }

  /* User defined formula for variable(s) molecular_viscosity over zone Pan
    ----------------------------------------------------------------------- */

  if (strcmp(fields_names, "molecular_viscosity") == 0 &&
      strcmp(zone_name, "Pan") == 0) {
    const cs_real_t mu0 = cs_glob_fluid_properties->viscl0;

    for (cs_lnum_t e_id = 0; e_id < n_elts; e_id++) {
      cs_lnum_t c_id = (elt_ids != nullptr) ? elt_ids[e_id] : e_id;
      fvals[0][c_id] = mu0;
    }
  }

  /* User defined formula for variable(s) specific_heat over zone all_cells
    ----------------------------------------------------------------------- */

  if (strcmp(fields_names, "specific_heat") == 0 &&
      strcmp(zone_name, "all_cells") == 0) {
    const cs_real_t cp0 = cs_glob_fluid_properties->cp0;

    for (cs_lnum_t e_id = 0; e_id < n_elts; e_id++) {
      cs_lnum_t c_id = (elt_ids != nullptr) ? elt_ids[e_id] : e_id;
      fvals[0][c_id] = cp0;
    }
  }

  /* User defined formula for variable(s) specific_heat over zone Pan
    ----------------------------------------------------------------- */

  if (strcmp(fields_names, "specific_heat") == 0 &&
      strcmp(zone_name, "Pan") == 0) {
    for (cs_lnum_t e_id = 0; e_id < n_elts; e_id++) {
      cs_lnum_t c_id = (elt_ids != nullptr) ? elt_ids[e_id] : e_id;
      fvals[0][c_id] = 4184;
    }
  }

  /* User defined formula for variable(s) thermal_conductivity over zone all_cells
    ------------------------------------------------------------------------------ */

  if (strcmp(fields_names, "thermal_conductivity") == 0 &&
      strcmp(zone_name, "all_cells") == 0) {
    const cs_real_t lambda0 = cs_glob_fluid_properties->lambda0;

    for (cs_lnum_t e_id = 0; e_id < n_elts; e_id++) {
      cs_lnum_t c_id = (elt_ids != nullptr) ? elt_ids[e_id] : e_id;
      fvals[0][c_id] = lambda0;
    }
  }

  /* User defined formula for variable(s) thermal_conductivity over zone Pan
    ------------------------------------------------------------------------ */

  if (strcmp(fields_names, "thermal_conductivity") == 0 &&
      strcmp(zone_name, "Pan") == 0) {
    for (cs_lnum_t e_id = 0; e_id < n_elts; e_id++) {
      cs_lnum_t c_id = (elt_ids != nullptr) ? elt_ids[e_id] : e_id;
      fvals[0][c_id] = 0.5284;
    }
  }
}

/*----------------------------------------------------------------------------*/

END_C_DECLS

